// Пример получения данных для get запроса http сервиса
// Контекст
// Платформа 1С:Предприятие 8.3. Конфигурация "1С:Учет в управляющих компаниях ЖКХ, ТСЖ и ЖСК"
// Общий модуль

#Область Собственники

Функция ПолучитьДанныеОСобственниках(ПараметрыЗапроса=Неопределено) Экспорт
			
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец ССЫЛКА Справочник.УПЖКХ_Жильцы
	|			ТОГДА УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец.ФизЛицо.Ссылка
	|		ИНАЧЕ УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец.Ссылка
	|	КОНЕЦ КАК СобственникСсылка,
	|	ВЫБОР
	|		КОГДА УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец ССЫЛКА Справочник.УПЖКХ_Жильцы
	|			ТОГДА УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец.ФизЛицо.ФИО
	|		КОГДА УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец ССЫЛКА Справочник.Контрагенты
	|			ТОГДА УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец.НаименованиеПолное
	|		ИНАЧЕ УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец.Наименование
	|	КОНЕЦ КАК СобственникНаименование,
	|	ВЫБОР
	|		КОГДА УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец ССЫЛКА Справочник.УПЖКХ_Жильцы
	|			ТОГДА УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец.ФизЛицо.Код
	|		ИНАЧЕ УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец.Код
	|	КОНЕЦ КАК СобственникКод,
	|	ВЫБОР
	|		КОГДА УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец ССЫЛКА Справочник.УПЖКХ_Жильцы
	|			ТОГДА УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец.ФизЛицо.ИНН
	|		ИНАЧЕ УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец.ИНН
	|	КОНЕЦ КАК ИНН,
	|	ВЫБОР
	|		КОГДА УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец ССЫЛКА Справочник.УПЖКХ_Жильцы
	|			ТОГДА УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец.ФизЛицо.Фамилия
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Фамилия,
	|	ВЫБОР
	|		КОГДА УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец ССЫЛКА Справочник.УПЖКХ_Жильцы
	|			ТОГДА УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец.ФизЛицо.Имя
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Имя,
	|	ВЫБОР
	|		КОГДА УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец ССЫЛКА Справочник.УПЖКХ_Жильцы
	|			ТОГДА УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец.ФизЛицо.Отчество
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Отчество,
	|	ВЫБОР
	|		КОГДА УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец ССЫЛКА Справочник.Контрагенты
	|			ТОГДА ""Контрагент""
	|		КОГДА УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец ССЫЛКА Справочник.УПЖКХ_Жильцы
	|			ТОГДА ""Физлицо""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ТипСобственника
	|ПОМЕСТИТЬ ВТСобственники
	|ИЗ
	|	РегистрСведений.УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчета.СрезПоследних КАК УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФизическиеЛицаКонтактнаяИнформация.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ФизическиеЛицаКонтактнаяИнформация.НомерТелефона) КАК НомерТелефона,
	|	МАКСИМУМ(ФизическиеЛицаКонтактнаяИнформация.АдресЭП) КАК АдресЭП
	|ПОМЕСТИТЬ ВТКонтактнаяИнформация
	|ИЗ
	|	Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	|ГДЕ
	|	ФизическиеЛицаКонтактнаяИнформация.Тип В(&ТипыКонтактнойИнформации)
	|
	|СГРУППИРОВАТЬ ПО
	|	ФизическиеЛицаКонтактнаяИнформация.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КонтрагентыКонтактнаяИнформация.Ссылка,
	|	МАКСИМУМ(КонтрагентыКонтактнаяИнформация.НомерТелефона),
	|	МАКСИМУМ(КонтрагентыКонтактнаяИнформация.АдресЭП)
	|ИЗ
	|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
	|ГДЕ
	|	КонтрагентыКонтактнаяИнформация.Тип В(&ТипыКонтактнойИнформации)
	|
	|СГРУППИРОВАТЬ ПО
	|	КонтрагентыКонтактнаяИнформация.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСобственники.СобственникКод КАК Код,
	|	ВТСобственники.СобственникНаименование КАК СобственникНаименование,
	|	ЕСТЬNULL(ВТКонтактнаяИнформация.НомерТелефона, ""null"") КАК Телефон,
	|	ЕСТЬNULL(ВТКонтактнаяИнформация.АдресЭП, ""null"") КАК ЭлектроннаяПочта,
	|	ВТСобственники.ТипСобственника КАК ТипСобственника,
	|	ВТСобственники.ИНН КАК ИНН,
	|	ВТСобственники.Фамилия КАК Фамилия,
	|	ВТСобственники.Имя КАК Имя,
	|	ВТСобственники.Отчество КАК Отчество,
	|	ВТСобственники.СобственникСсылка КАК Собственник
	|ИЗ
	|	ВТСобственники КАК ВТСобственники
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКонтактнаяИнформация КАК ВТКонтактнаяИнформация
	|		ПО ВТСобственники.СобственникСсылка = ВТКонтактнаяИнформация.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	СобственникНаименование"; 
	
	ТипыКонтактнойИнформации = Новый Массив;
	ТипыКонтактнойИнформации.Добавить(Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	ТипыКонтактнойИнформации.Добавить(Перечисления.ТипыКонтактнойИнформации.Телефон);
	
	Запрос.УстановитьПараметр("ТипыКонтактнойИнформации", ТипыКонтактнойИнформации);
	
	Если ЗначениеЗаполнено(ПараметрыЗапроса) Тогда
		ДобавитьПараметрыВЗапросОСобственниках(Запрос, ПараметрыЗапроса);
	КонецЕсли;
	
	Возврат Запрос.Выполнить();  
	
КонецФункции   


Процедура ДобавитьПараметрыВЗапросОСобственниках(Запрос, ПараметрыЗапроса)
	
	КодСобственника = ПараметрыЗапроса.Получить("code");
	ДобавитьПараметрВЗапрос(Запрос, 2, "ВТСобственники.СобственникКод = """+КодСобственника+"""", КодСобственника);
	
	ТипСобственника = ПараметрыЗапроса.Получить("owner_type");
	ДобавитьПараметрВЗапрос(Запрос, 2, "ВТСобственники.ТипСобственника = """+ТипСобственника+"""", ТипСобственника); 
	
	Фамилия = ПараметрыЗапроса.Получить("lastname");
	ДобавитьПараметрВЗапрос(Запрос, 2, "ВТСобственники.Фамилия ПОДОБНО ""%"+Фамилия+"%""", Фамилия);
	
	Имя = ПараметрыЗапроса.Получить("firstname");
	ДобавитьПараметрВЗапрос(Запрос, 2, "ВТСобственники.Имя ПОДОБНО ""%"+Имя+"%""", Имя);
	
	Отчество = ПараметрыЗапроса.Получить("surname");
	ДобавитьПараметрВЗапрос(Запрос, 2, "ВТСобственники.Отчество ПОДОБНО ""%"+Отчество+"%""", Отчество);
	
	Телефон = ПараметрыЗапроса.Получить("phone");
	ДобавитьПараметрВЗапрос(Запрос, 2, "ВТКонтактнаяИнформация.НомерТелефона ПОДОБНО ""%"+Телефон+"%""", Телефон);
		
	ЭлектроннаяПочта = ПараметрыЗапроса.Получить("email");
	ДобавитьПараметрВЗапрос(Запрос, 2, "ВТКонтактнаяИнформация.АдресЭП ПОДОБНО ""%"+ЭлектроннаяПочта+"%""", ЭлектроннаяПочта );
		
	ИНН = ПараметрыЗапроса.Получить("inn");
	ДобавитьПараметрВЗапрос(Запрос, 2, "ВТСобственники.ИНН = """+ИНН+"""", ИНН);  
	
	СобственникНаименование = ПараметрыЗапроса.Получить("fullname");
	ДобавитьПараметрВЗапрос(Запрос, 2, "ВТСобственники.СобственникНаименование ПОДОБНО ""%"+СобственникНаименование+"%""", СобственникНаименование);
	
КонецПроцедуры


Функция ПолучитьДанныеОСобственникахJSON(ДанныеОСобственниках) Экспорт
		
	СоответствиеКлючейJSONПолямЗапроса = ПолучитьСоответствиеКлючейJSONПолямЗапросаСобственники();
	
	Возврат ПолучитьДанныеВJSON(ДанныеОСобственниках, СоответствиеКлючейJSONПолямЗапроса);
		
КонецФункции 


Функция ПолучитьСоответствиеКлючейJSONПолямЗапросаСобственники()

	СоответствиеКлючейJSONПолямЗапроса = Новый Структура;
	
	СоответствиеКлючейJSONПолямЗапроса.Вставить("code", "Код");
	СоответствиеКлючейJSONПолямЗапроса.Вставить("owner_type", "ТипСобственника");
	СоответствиеКлючейJSONПолямЗапроса.Вставить("fullname", "СобственникНаименование");
	СоответствиеКлючейJSONПолямЗапроса.Вставить("lastname", "Фамилия");
	СоответствиеКлючейJSONПолямЗапроса.Вставить("firstname", "Имя");		
	СоответствиеКлючейJSONПолямЗапроса.Вставить("surname", "Отчество");
	СоответствиеКлючейJSONПолямЗапроса.Вставить("phone", "Телефон");
	СоответствиеКлючейJSONПолямЗапроса.Вставить("email", "ЭлектроннаяПочта");
	СоответствиеКлючейJSONПолямЗапроса.Вставить("inn", "ИНН");
	
	Возврат СоответствиеКлючейJSONПолямЗапроса;
	
КонецФункции 

#КонецОбласти



#Область ПроцедурыИФункцииОбщегоНазначения

Процедура ДобавитьПараметрВЗапрос(Запрос, ИндексПакетаЗапросов, СтрокаОтбора, ЗначениеПараметра=Неопределено)	
	
	Если ЗначениеПараметра = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(Запрос.Текст);
	Оператор = СхемаЗапроса.ПакетЗапросов[ИндексПакетаЗапросов].Операторы[0];	
	
	Оператор.Отбор.Добавить(СтрокаОтбора);		
	Запрос.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();			
	
	ПозицияНачалаПараметра = СтрНайти(СтрокаОтбора, "&");
	Если ПозицияНачалаПараметра>0 Тогда
		ИмяПараметра = СтрЗаменить(Сред(СтрокаОтбора, ПозицияНачалаПараметра+1),"""", "");
		Запрос.УстановитьПараметр(ИмяПараметра, ЗначениеПараметра);	
	КонецЕсли;
	
КонецПроцедуры


Функция ПолучитьДанныеВJSON(Данные, СоответствиеКлючейJSONПолямЗапроса)

	Запись = Новый ЗаписьJSON;	
	ПараметрыЗаписи = Новый ПараметрыЗаписиJSON(,, Истина); // Использовать двойные кавычки, не помогло чтобы убрать \ перед "
	Запись.УстановитьСтроку(ПараметрыЗаписи);
		
	Запись.ЗаписатьНачалоМассива();
	
	Выборка = Данные.Выбрать();
	Пока Выборка.Следующий() Цикл			
		
		Запись.ЗаписатьНачалоОбъекта();
		
		Для каждого Поле Из СоответствиеКлючейJSONПолямЗапроса Цикл
			Если ЗначениеЗаполнено(Выборка[Поле.Значение]) Тогда 			
				Если Поле.Ключ = "phone" Тогда
					ЗаписатьСвойствоОбъектаJSON(Запись, Поле.Ключ, ПолучитьХеш(Выборка[Поле.Значение]));
				Иначе
					ЗаписатьСвойствоОбъектаJSON(Запись, Поле.Ключ, Выборка[Поле.Значение]);	
				КонецЕсли;	
			Иначе
				ЗаписатьСвойствоОбъектаJSON(Запись, Поле.Ключ, "");
			КонецЕсли;	
		КонецЦикла;   
		
		Запись.ЗаписатьКонецОбъекта(); 
	КонецЦикла;	
	
	Запись.ЗаписатьКонецМассива();
	
	Возврат Запись.Закрыть(); 
	
КонецФункции // ПолучитьДанныеВJSON()


Процедура ЗаписатьСвойствоОбъектаJSON(Запись, Имя, Значение)
	
	Запись.ЗаписатьИмяСвойства(Имя);
	Если ТипЗнч(Значение) = Тип("Дата") Тогда
		Запись.ЗаписатьЗначение(ЗаписатьДатуJSON(Значение, ФорматДатыJSON.ISO));		
	ИначеЕсли ТипЗнч(Значение) = Тип("УникальныйИдентификатор") Тогда
    	Запись.ЗаписатьЗначение(Строка(Значение));
	ИначеЕсли ТипЗнч(Значение) = Тип("Строка") Тогда
		Запись.ЗаписатьЗначение(СокрЛП(Значение));
	Иначе
		Запись.ЗаписатьЗначение(Строка(Значение));
	КонецЕсли;	
	
КонецПроцедуры


Функция ПолучитьХеш(Данные)
	
	ХешированиеДанных = Новый ХешированиеДанных(ХешФункция.MD5);
	ХешированиеДанных.Добавить(Данные);
	
	Результат = СтрЗаменить(ХешированиеДанных.ХешСумма, " ", "");
	
	Возврат Результат;

КонецФункции // ПолучитьХеш()

#КонецОбласти
